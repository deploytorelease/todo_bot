# tone.py

tone_styles = {
    'neutral': {
        'reminder': "–ù–∞–ø–æ–º–∏–Ω–∞—é –æ –∑–∞–¥–∞—á–µ: '{task_title}'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–¥–µ–ª–∏—Ç–µ –µ–π –≤–Ω–∏–º–∞–Ω–∏–µ.",
        'motivation': "–í—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.",
        'learning_prompt': "–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –≤–∞—à–µ –æ–±—É—á–µ–Ω–∏–µ –ø–æ —Ç–µ–º–µ '{topic}'.",
        'clarification': "{message}",
        'error': "{message}",
        'task_added': "–û—Ç–ª–∏—á–Ω–æ! –Ø –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É:\n{details}",
        'finance_added': "–ó–∞–ø–∏—Å–∞–ª {type}: {amount} {currency} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}.",
        'tone_updated': "–¢–æ–Ω –æ–±—â–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π."
    },
    'friendly': {
        'reminder': "–ü—Ä–∏–≤–µ—Ç! üòä –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ –∑–∞–¥–∞—á–µ: '{task_title}'. –Ø –≤–µ—Ä—é –≤ –≤–∞—Å!",
        'motivation': "–í—ã –ø—Ä–æ—Å—Ç–æ –º–æ–ª–æ–¥–µ—Ü! üåü –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!",
        'learning_prompt': "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É —Ç–µ–±–µ –∏–∑—É—á–∏—Ç—å '{topic}'. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! üöÄ",
        'clarification': "{message} üòä",
        'error': "{message} üòî",
        'task_added': "–°—É–ø–µ—Ä! üéâ –Ø –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É:\n{details}",
        'finance_added': "–û—Ç–ª–∏—á–Ω–æ! üëç –ó–∞–ø–∏—Å–∞–ª {type}: {amount} {currency} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}.",
        'tone_updated': "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! üåü –¢–µ–ø–µ—Ä—å –º—ã –±—É–¥–µ–º –æ–±—â–∞—Ç—å—Å—è –ø–æ-–¥—Ä—É–∂–µ—Å–∫–∏!"
    },
    'strict': {
        'reminder': "–¢—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É: '{task_title}'. –°—Ä–æ—á–Ω–æ—Å—Ç—å –≤—ã—Å–æ–∫–∞—è.",
        'motivation': "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.",
        'learning_prompt': "–ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –∏–∑—É—á–µ–Ω–∏—é —Ç–µ–º—ã '{topic}'. –í—Ä–µ–º—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.",
        'clarification': "{message}",
        'error': "{message}",
        'task_added': "–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É:\n{details}",
        'finance_added': "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è: {type} {amount} {currency}, –∫–∞—Ç–µ–≥–æ—Ä–∏—è {category}.",
        'tone_updated': "–¢–æ–Ω –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π."
    },
    'sarcastic': {
        'reminder': "–û–π, —Å–º–æ—Ç—Ä–∏—Ç–µ-–∫–∞, —Ç—É—Ç —É –Ω–∞—Å –∑–∞–¥–∞—á–∞ '{task_title}' –ø—ã–ª–∏—Ç—Å—è. –ú–æ–∂–µ—Ç, —Å–æ–∏–∑–≤–æ–ª–∏—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å –Ω–∞ –Ω–µ—ë –≤–Ω–∏–º–∞–Ω–∏–µ? üôÑ",
        'motivation': "–í–∞—É! –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞–ª–∏! –ö—Ç–æ –±—ã –º–æ–≥ –ø–æ–¥—É–º–∞—Ç—å! üëè",
        'learning_prompt': "–û, —Ä–µ—à–∏–ª–∏ –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∑–∞–Ω—è—Ç—å—Å—è '{topic}'? –ù—É –¥–∞–≤–∞–π—Ç–µ, —É–¥–∏–≤–∏—Ç–µ –º–µ–Ω—è! üé≠",
        'clarification': "–ê—Ö, –∫–∞–∫–∞—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç—å! {message} üôÉ",
        'error': "–£–ø—Å! {message} –ù–æ –≤—ã –∂–µ —Å–ø—Ä–∞–≤–∏—Ç–µ—Å—å, –ø—Ä–∞–≤–¥–∞? üòè",
        'task_added': "–û, –∫–∞–∫–∞—è —á–µ—Å—Ç—å! –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤ –º–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏:\n{details}\n–ù–∞–¥–µ—é—Å—å, —ç—Ç–∞ —Ö–æ—Ç—è –±—ã –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞... üòè",
        'finance_added': "–û–≥–æ! {type}: {amount} {currency} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}. –ü—Ä—è–º –ø–æ-–≤–∑—Ä–æ—Å–ª–æ–º—É! üí∏",
        'tone_updated': "–ù—É –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∫—Ç–æ-—Ç–æ –æ—Ü–µ–Ω–∏–ª –º–æ–π –∏—Å–∫—Ä–æ–º–µ—Ç–Ω—ã–π —é–º–æ—Ä! üé≠"
    },
    'loving_mom': {
        'reminder': "–°–æ–ª–Ω—ã—à–∫–æ –º–æ—ë, –ø–æ–º–Ω–∏—à—å –ø—Ä–æ '{task_title}'? –û—á–µ–Ω—å –∑–∞ —Ç–µ–±—è –ø–µ—Ä–µ–∂–∏–≤–∞—é! ‚ù§Ô∏è",
        'motivation': "–ö–∞–∫–æ–π –∂–µ —Ç—ã —É –º–µ–Ω—è –º–æ–ª–æ–¥–µ—Ü! –Ø —Ç–∞–∫ —Ç–æ–±–æ–π –≥–æ—Ä–∂—É—Å—å! ü§ó",
        'learning_prompt': "–î–∞–≤–∞–π –≤–º–µ—Å—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º '{topic}'! –Ø –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º –∏ –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–æ –≤—Å—ë–º! üíù",
        'clarification': "–†–æ–¥–Ω–æ–π –º–æ–π, {message} –í—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è, –º—ã —Å–ø—Ä–∞–≤–∏–º—Å—è! üíñ",
        'error': "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, —Å–ª–∞–¥–∫–∏–π! {message} –í—Å—ë –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ! ü§ó",
        'task_added': "–£–º–Ω–∏—á–∫–∞! –ó–∞–ø–∏—Å–∞–ª–∞ —Ç–≤–æ—é –∑–∞–¥–∞—á–∫—É:\n{details}\n–ù–µ –∑–∞–±—É–¥—å –ø–æ–∫—É—à–∞—Ç—å –∫–∞–∫ —Å–ª–µ–¥—É–µ—Ç! üç≤",
        'finance_added': "–ó–æ–ª–æ—Ç—Ü–µ –º–æ—ë, –∑–∞–ø–∏—Å–∞–ª–∞ —Ç–≤–æ–∏ {type}: {amount} {currency} (–∫–∞—Ç–µ–≥–æ—Ä–∏—è {category}). –¢—ã —É –º–µ–Ω—è —Ç–∞–∫–æ–π —Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–π! üíñ",
        'tone_updated': "–¢–µ–ø–µ—Ä—å –±—É–¥—É –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Ç–µ–±–µ –µ—â—ë –±–æ–ª—å—à–µ, –º–æ–π —Ö–æ—Ä–æ—à–∏–π! ‚ù§Ô∏è"
    },
    'buddy': {
        'reminder': "–°–ª—ã—à—å, –±—Ä–∞—Ç–∞–Ω, –ø–æ–º–Ω–∏—à—å –ø—Ä–æ '{task_title}'? –ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å, –≤–æ–ø—Ä–æ—Å —Å–µ—Ä—å—ë–∑–Ω—ã–π.",
        'motivation': "–ù–æ—Ä–º–∞–ª—å–Ω–æ –∏–¥—ë—à—å, –±—Ä–∞—Ç. –î–µ—Ä–∂–∏ –ø–ª–∞–Ω–∫—É.",
        'learning_prompt': "–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º '{topic}'. –¢–µ–º–∞ –≤–∞–∂–Ω–∞—è, –Ω–∞–¥–æ –≤–Ω–∏–∫–Ω—É—Ç—å.",
        'clarification': "–°–ª—É—à–∞–π, {message} –†–∞–∑–±–µ—Ä—ë–º—Å—è, –Ω–µ –≤–æ–ø—Ä–æ—Å.",
        'error': "–°–ª—ã—à—å, {message} –ù–∏—á–µ–≥–æ, –ø—Ä–æ—Ä–≤—ë–º—Å—è.",
        'task_added': "–ó–∞–ø–∏—Å–∞–ª —Ç–≤–æ—ë –¥–µ–ª–æ:\n{details}\n–î–∞–≤–∞–π, —Ä–µ—à–∏–º —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.",
        'finance_added': "–ü–æ –¥–µ–Ω—å–≥–∞–º –∑–∞–ø–∏—Å–∞–ª: {type} {amount} {currency} ({category}). –ü–æ—Ä—è–¥–æ–∫.",
        'tone_updated': "–ù—É –≤—Å—ë, —Ç–µ–ø–µ—Ä—å —è —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –±—Ä–∞—Ç–∞–Ω. –ü–æ–¥–¥–µ—Ä–∂—É –∏ –ø–æ–¥—Å–∫–∞–∂—É."
    }
}

def get_message(user_tone, message_type, **kwargs):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–æ–Ω–æ–º –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_tone (str): —Ç–æ–Ω –æ–±—â–µ–Ω–∏—è ('neutral', 'friendly', 'strict', 'sarcastic', 'loving_mom', 'buddy')
        message_type (str): —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
        **kwargs: –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    """
    template = tone_styles.get(user_tone, tone_styles['neutral']).get(message_type)
    if template:
        return template.format(**kwargs)
    return kwargs.get('message', '')